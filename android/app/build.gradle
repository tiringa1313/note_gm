plugins {
    id "com.android.application"
    id "kotlin-android"
    // O Flutter Gradle Plugin precisa ser aplicado após os plugins Android e Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1" // Versão do código, atualize conforme necessário
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0" // Nome da versão, atualize conforme necessário
}

android {
    namespace = "com.example.note_gm"
    compileSdkVersion flutter.compileSdkVersion  // Usando a versão SDK do Flutter
    ndkVersion flutter.ndkVersion // Usando a versão NDK do Flutter

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.note_gm"  // ID único do aplicativo
        minSdkVersion flutter.minSdkVersion   // Mínima versão SDK para Android
        targetSdkVersion flutter.targetSdkVersion  // Versão de destino do SDK para Android
        versionCode flutterVersionCode.toInteger() // Versão do código do Flutter
        versionName flutterVersionName  // Nome da versão do Flutter
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug // Usando a configuração de assinatura de debug
        }
    }
}

// Localização da origem do Flutter
flutter {
    source = "../.."  // Direção do código fonte Flutter
}
